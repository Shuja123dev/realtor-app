// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PropertyType {
  RESIDETIAL
  CONDO
}

enum UserType {
  BUYER
  REALTOR
  ADMIN
}

model User {
  id              Int       @id @default(autoincrement())
  name            String
  phone           String
  email           String    @unique
  password        String
  cteatedAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  userType        UserType
  Home            Home[]
  buyerMessages   Message[] @relation("buyerMessages")
  realtorMessages Message[] @relation("realtorMessages")
}

model Home {
  id            Int          @id @default(autoincrement())
  adress        String
  noOfBedrooms  Int
  noOfBathrooms Float
  City          Int
  ListedDate    DateTime     @default(now())
  price         Float
  landSize      Float
  propertyType  PropertyType
  cteatedAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  images        Image[]
  realtorId     Int
  realtor       User         @relation(fields: [realtorId], references: [id])
  Message       Message[]
}

model Message {
  id        Int    @id @default(autoincrement())
  messaeg   String
  homeId    Int
  home      Home   @relation(fields: [homeId], references: [id])
  realtorId Int?
  realtor   User?  @relation("realtorMessages", fields: [realtorId], references: [id])
  buyerId   Int?
  buyer     User?  @relation("buyerMessages", fields: [buyerId], references: [id])
}

model Image {
  id        Int      @id @default(autoincrement())
  url       String
  cteatedAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  homeId    Int
  home      Home     @relation(fields: [homeId], references: [id])
}
